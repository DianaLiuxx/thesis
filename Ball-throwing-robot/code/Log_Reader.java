/*
 * Code generated by MIMOS tool.
 * Date: 2024/05/01 18:58:48
 */

import java.util.Random;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.List;
import java.util.ArrayList;
import java.util.*;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class Log_Reader {
    String filePath = "D:\\lxx\\thesis\\cases\\lxx\\Ball-throwing-robot\\data\\simulator.txt";
    int bootTime = 1;
    private ArrayList<Double> parameters = new ArrayList<>();
    private ArrayList<Double> positions = new ArrayList<>();

    /* Inputs: */

    /* Outputs: */
    double[] output1;
    double[] output2;

    /* Node computation: */
    public boolean run() {
        if (bootTime == 1) {
            try (BufferedReader logFile = new BufferedReader(new FileReader(filePath))) {
                String line = logFile.readLine();
                if (!"Parameters Position".equals(line)) {
                    throw new IllegalArgumentException("First line does not match expected header.");
                }
                // System.out.println("line: " + line);

                while ((line = logFile.readLine()) != null) {
                    int pos = line.indexOf(']');

                    String paramStr = line.substring(1, pos);
                    String[] paramTokens = paramStr.split("\\s+");

                    for (String token : paramTokens) {
                        if (!token.isEmpty()) {
                            parameters.add(Double.parseDouble(token));
                        }
                    }

                    String posStr = line.substring(pos + 2);
                    positions.add(Double.parseDouble(posStr.trim()));
                }
            } catch (IOException e) {
                System.err.println("Error reading the log file: " + e.getMessage());
            }

            output1 = new double[parameters.size()];
            for (int i = 0; i < parameters.size(); i++) {
                output1[i] = parameters.get(i);
            }

            output2 = new double[positions.size()];
            for (int i = 0; i < positions.size(); i++) {
                output2[i] = positions.get(i);
            }
             
            bootTime = 0;

        }

        // System.out.println("[Log_Reader] starts runing; runNumer: " + bootTime);
        // System.out.println("[Log_Reader] output1: " + Arrays.toString(output1));
        // System.out.println("[Log_Reader] output2: " + Arrays.toString(output2));



        return true;
    }

    /* Setters (for inputs): */

    /* Getters (for outputs): */
    public double[] get_output1() {
        return output1;
    }
    public double[] get_output2() {
        return output2;
    }
}
