/*
 * Code generated by MIMOS tool.
 * Date: 2024/03/21 19:14:05
 */

import java.util.Random;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.List;
import java.util.ArrayList;
import java.util.*;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class Measurements {
    /* Inputs: */

    /* Outputs: */
    double[] output1;

    List<double[]> container = new ArrayList<>();
    static String filePath = "D:\\lxx\\thesis\\cases\\lxx\\ekfslam0321\\data\\input-logs\\data.txt";
    static int lineNumber = 1;
    static int numEntries = 0; // The number of logs

    public Measurements() {
        // Read the measurements from the log file and store it in the container
        String line = "";
        String splitBy = "\\s+";
        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            while ((line = br.readLine()) != null) {
                String[] dataVal = line.split(splitBy);
                if (dataVal.length == 12) {
                    double[] inp = new double[12];
                    for (int i = 0; i < 12; i++) {
                        inp[i] = Double.parseDouble(dataVal[i]);
                    }
                    container.add(inp);
                    numEntries++; // "data.txt" has 30 entries
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /* Node computation: */
    public boolean run() {
        if (lineNumber < numEntries) {
            output1 = container.get(lineNumber);
            System.out.print("Measurements: line: " + lineNumber + ", ");
        } else {
            output1 = container.get(numEntries - 1);
            System.out.println("\nAttention: There only " + numEntries + "logs. No more new measurements.");
        }
        lineNumber++; // Update the lineNumber for the next read

        System.out.println("logLength: " + numEntries);
        System.out.print("[Log data] Measurements: ");
        if (output1 != null && output1.length != 0) {
            for (int i = 0; i < 12; i++) {
                System.out.print(output1[i] + " ");
            }
        } else {
            System.out.print("null");
        }
        System.out.println("\n");
        return true;
    }

    /* Setters (for inputs): */

    /* Getters (for outputs): */
    public double[] get_output1() {
        return output1;
    }
}
