/*
 * Code generated by MIMOS tool.
 * Date: 2024/03/13 16:42:06
 * 
 * Read odometry data from the given log file, which is used for update motion.
 * 
 * Outputs: 
 * Current odometry log, a list of double, which has three elements.
 * 
 */

import java.util.Random;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.List;
import java.util.ArrayList;
import java.util.*;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class Odometer {
    /* Inputs: */

    /* Outputs: */
    double[] output1;
    List<double[]> container = new ArrayList<>();
    static String filePath = "D:\\lxx\\thesis\\cases\\lxx\\pfl0312\\data\\logs\\log1.txt";
    static int lineNumber = 1; // The first line is skiped, since it used for first previous odometry
    static int logLength = 0; // The number of logs in the file

    public Odometer() {
        // Read the Odometer data from the log file and store the data in the container
        String line = "";
        String splitBy = " ";
        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            while ((line = br.readLine()) != null) {
                String[] dataVal = line.split(splitBy);
                double[] inp = new double[3];
                inp[0] = Double.valueOf(dataVal[0]);
                inp[1] = Double.valueOf(dataVal[1]);
                inp[2] = Double.valueOf(dataVal[2]);
                container.add(inp);
                logLength++;
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /* Node computation: */
    public boolean run() {
        // Output the odometry data one line at a time
        if (lineNumber < logLength) {
            output1 = container.get(lineNumber);
            System.out.print("Odometer Output: line: " + lineNumber + ", ");
        } else {
            output1 = container.get(logLength - 1);
            System.out.println("Odometer: There only " + logLength + "logs. No new log data any more.");
        }
        lineNumber++; // Update the lineNumber for the next read

        //System.out.println("logLength: " + logLength);
        System.out.print("[Log data] odometryLog: ");
        if (output1 != null && output1.length != 0) {
            for (int i = 0; i < 3; i++) {
                System.out.print(output1[i] + " ");
            }
        } else {
            System.out.print("null");
        }
        System.out.println();

        return true;
    }

    /* Setters (for inputs): */

    /* Getters (for outputs): */
    public double[] get_output1() {
        return output1;
    }
}
