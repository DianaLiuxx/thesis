/*
 * Code generated by MIMOS tool.
 * Date: 2024/05/08 19:19:03
 */

import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

public class Weights {

    int bootTime = 1;
    /* Inputs: */

    /* Outputs: */
    double[] output1;

    /* Node computation: */
    public boolean run() {
        // Generate the file path
        String parentPath = new File(Weights.class.getProtectionDomain().getCodeSource().getLocation().getPath())
                .getParent();
        String inputFilePath = parentPath + File.separator + "data" + File.separator + "input-trajs" + File.separator
                + "path1.weights";
        //System.out.println("filePath: " + inputFilePath);

        List<Double> weights = new ArrayList<>();

        // Only read the file once
        if (bootTime == 1) {
            try {
                File file = new File(inputFilePath);
                Scanner scanner = new Scanner(file);

                while (scanner.hasNextLine()) {
                    String line = scanner.nextLine();
                    weights.add(Double.parseDouble(line));
                }

                scanner.close();
            } catch (FileNotFoundException e) {
                System.out.println("File not found: " + e.getMessage());
            }

            output1 = new double[weights.size()];
            for (int i = 0; i < weights.size(); i++) {
                output1[i] = weights.get(i);
            }

            bootTime = 0;
        }

        //System.out.println("Weights: " + Arrays.toString(output1));

        return true;
    }

    /* Setters (for inputs): */

    /* Getters (for outputs): */
    public double[] get_output1() {
        return output1;
    }
}